plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'

  // Quality stuff

  //cf. https://checkstyle.sourceforge.io/
  id 'checkstyle'
  // cf. https://spotbugs.github.io/
  id "com.github.spotbugs" version "4.7.2"
  // cf. https://github.com/diffplug/spotless/
  id "com.diffplug.spotless" version "5.14.2"

  id 'org.openjfx.javafxplugin' version '0.0.10'
}


repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}


dependencies {
  // Use JUnit Jupiter API for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

  // Use JUnit Jupiter Engine for testing.
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

checkstyle {
  toolVersion '8.45'
  ignoreFailures = false
  maxWarnings = 0
}

spotbugsMain {
  reports {
    xml.enabled = false
    html.enabled = true
  }
  excludeFilter = file('config/spotbugs/exclude.xml')
}

spotbugs {
  effort = 'max'
}

spotless {
  java {
      googleJavaFormat()
      lineEndings 'UNIX'
  }
}

javafx {
	version = "17.0.1"
	modules = [ 'javafx.base', 'javafx.swing', 'javafx.graphics', 'javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web' ]
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

application {
  // Define the main class for the application.
  mainClass.set('bauernschach.view.Main')
}

task(runShell, dependsOn: 'classes', type: JavaExec) {
  mainClass.set('bauernschach.Shell')
  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in
  enableAssertions = true
}

run {
  standardInput = System.in
  enableAssertions = true
}